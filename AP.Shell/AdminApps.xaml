<Window x:Name="window" x:Class="AP.Shell.AdminApps"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:AP.Shell"
        Icon="Resources/shield.ico"
        Title="AdminApps"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip"
        Style="{DynamicResource MetroWindowStyle}"
        ShowInTaskbar="True" KeyDown="Window_KeyDown" Closed="Window_Closed" Loaded="Window_Loaded">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <Style x:Key="MetroWindowStyle" TargetType="{x:Type Window}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="WindowStyle" Value="None" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Window}">
                                    <Grid>
                                        <Border x:Name="MainBorder" BorderThickness="1" Margin="10,10,0,0" CornerRadius="0,15,0,15">
                                            <Border.Background>
                                                <SolidColorBrush Color="Gray" Opacity="0.85" />
                                            </Border.Background>
                                            <DockPanel LastChildFill="True">
                                                <Border x:Name="PART_TITLEBAR" 
                                                Margin="0,0,0,0" Height="32" DockPanel.Dock="Top"  
                                                Background="Transparent" MouseLeftButtonDown="PART_TITLEBAR_MouseLeftButtonDown">
                                                    <DockPanel LastChildFill="False">
                                                        <Button x:Name="PART_CLOSE" DockPanel.Dock="Right" 
                                                            VerticalAlignment="Center" Margin="5,5,15,5"
                                                            Height="20" Width="20" 
                                                            Style="{DynamicResource MetroWindowButtonStyle}"
                                                            Click="PART_CLOSE_Click">
                                                            <Path Data="F1M54.0573,47.8776L38.1771,31.9974 54.0547,16.1198C55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531L32.0026,25.8229 16.1224,9.94531C14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198L25.8255,32 9.94794,47.8776C8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534L32.0026,38.1745 47.8802,54.0534C49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776z" 
                                                                Stretch="Uniform" Fill="#FFAAAAAA" Width="10" Margin="0,0,0,0" ></Path>
                                                        </Button>

                                                        <Button x:Name="PART_MAXIMIZE_RESTORE" 
                                                            DockPanel.Dock="Right" Margin="5"
                                                            HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                            Height="20" Width="20" Style="{DynamicResource MetroWindowButtonStyle}"
                                                            Click="PART_MAXIMIZE_RESTORE_Click">
                                                            <Path Data="M4.3685131,23.127279L4.3685131,47.283243 47.117023,47.283243 47.117023,23.127279z M0,10.684L53.755001,10.684 53.755001,51.668001 0,51.668001z M8.5679998,0L58.668022,0 64,0 64,5.6864691 64,45.317999 58.668022,45.317999 58.668022,5.6864691 8.5679998,5.6864691z"
                                                              Stretch="Uniform" Fill="#FFAAAAAA" Width="10" Margin="0,0,0,0" ></Path>
                                                        </Button>
                                                        <Button x:Name="PART_MINIMIZE" 
                                                            HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center" Margin="5"
                                                            DockPanel.Dock="Right"
                                                            Height="20" Width="20" Style="{DynamicResource MetroWindowButtonStyle}"
                                                            Click="PART_MINIMIZE_Click" VerticalContentAlignment="Bottom">
                                                            <Path Data="M0,20L53.333,20 53.333,8.888 0,8.888z" 
                                                                  Stretch="Uniform" Fill="#FFAAAAAA" Width="10" Margin="0,0,0,5"></Path>
                                                        </Button>
                                                        <!--
                                                        <Button HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center" Margin="5,5,1,5"
                                                            DockPanel.Dock="Left"
                                                            Tag="1" Click="Layout_Click"
                                                            Height="20" Width="20" Style="{DynamicResource APMetroWindowButtonStyle}">
                                                            <Image Source="Resources/1.png" />
                                                        </Button>
                                                        <Button HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center" Margin="1,5,1,5"
                                                            DockPanel.Dock="Left"
                                                            Tag="4" Click="Layout_Click"    
                                                            Height="20" Width="20" Style="{DynamicResource APMetroWindowButtonStyle}">
                                                            <Image Source="Resources/2x2.png" />
                                                        </Button>

                                                        <Button HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center" Margin="1,5,1,5"
                                                            DockPanel.Dock="Left"
                                                            Tag="9" Click="Layout_Click"    
                                                            Height="20" Width="20" Style="{DynamicResource APMetroWindowButtonStyle}">
                                                            <Image Source="Resources/3x3.png" />
                                                        </Button>
                                                        <Button HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center" Margin="1,5,1,5"
                                                            DockPanel.Dock="Left"
                                                            Tag="16" Click="Layout_Click"     
                                                            Height="20" Width="20" Style="{DynamicResource APMetroWindowButtonStyle}">
                                                            <Image Source="Resources/4x4.png" />
                                                        </Button>

                                                        <Button HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center" Margin="1,5,1,5"
                                                            DockPanel.Dock="Left"
                                                            Tag="*" Click="Layout_Click"    
                                                            Height="20" Width="20" Style="{DynamicResource APMetroWindowButtonStyle}">
                                                            <Image Source="Resources/all.png" />
                                                        </Button>
                                                        <Button HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center" Margin="1,5,1,5"
                                                            DockPanel.Dock="Left"
                                                            Tag="CYCLE_REW" Click="Cycle_Click"    
                                                            Height="20" Width="20" Style="{DynamicResource APMetroWindowButtonStyle}">
                                                            <Image Source="Resources/prev.png" />
                                                        </Button>
                                                        <Button HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center" Margin="1,5,1,5"
                                                            DockPanel.Dock="Left"
                                                            Tag="CYCLE_FF" Click="Cycle_Click"    
                                                            Height="20" Width="20" Style="{DynamicResource APMetroWindowButtonStyle}">
                                                            <Image Source="Resources/next.png" />
                                                        </Button>
                                                        -->

                                                        <TextBlock DockPanel.Dock="Right" 
                                                                   FontSize="12" Margin="4,0,5,0" 
                                                                   VerticalAlignment="Center" 
                                                                   Foreground="#FFAAAAAA" 
                                                                   TextWrapping="NoWrap"
                                                                   Name="fpsBlock"
                                                                   Text="{Binding Tag, ElementName=window}"
                                                                   />
                                                        <TextBlock Margin="30,0,0,5" VerticalAlignment="Center" 
                                                           Foreground="#FFAAAAAA" TextWrapping="NoWrap"
                                                           DockPanel.Dock="Left"
                                                           Text="{TemplateBinding Title}" FontSize="16"/>
                                                    </DockPanel>
                                                </Border>
                                                <AdornerDecorator DockPanel.Dock="Bottom">
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                                </AdornerDecorator>
                                            </DockPanel>
                                        </Border>
                                        <Image Source="{Binding Icon, ElementName=window}" Height="40" Width="40" VerticalAlignment="Top" HorizontalAlignment="Left" MouseDown="PART_TITLEBAR_MouseLeftButtonDown"/>
                                        <ResizeGrip DockPanel.Dock="Bottom" x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="False" Visibility="Visible" VerticalAlignment="Bottom"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--
                        <Style.Triggers>
                            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Window}">
                                            
                                                <Grid>
                                                    <AdornerDecorator>
                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                                    </AdornerDecorator>
                                                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="False" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                                                </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                                        <Condition Property="WindowState" Value="Normal"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                        -->
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary>
                    <Style x:Key="MetroWindowButtonStyle" TargetType="{x:Type Button}">
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="#FF707070"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <SolidColorBrush Color="Transparent" />
                                        </Border.Background>
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="#FF3C7FB1" Opacity="0.25" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                            <Setter Property="BorderThickness" TargetName="border" Value="1" />
                                            <!--<Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                            <Setter Property="BorderThickness" TargetName="border" Value="1" />
                                            <Setter Property="Opacity" TargetName="border" Value="0.25" />-->
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary>
                    <Style x:Key="APMetroWindowButtonStyle" TargetType="{x:Type Button}">
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="#FF707070"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Opacity="0.5">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!--<Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>-->
                                            <Setter Property="Opacity" TargetName="border" Value="1" />
                                        </Trigger>
                                        <!--<Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                        </Trigger>-->
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary Source="Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>

        <ListView Style="{DynamicResource {ComponentResourceKey ResourceId=resIconView, TypeInTargetAssembly={x:Type local:IconView}}}" 
                  ItemTemplate="{DynamicResource adminApps}" SelectionMode="Single"
                  x:Name="folderView" SelectionChanged="folderView_SelectionChanged"  Background="Transparent" Margin="10,0,10,10" />

    </Grid>
</Window>
